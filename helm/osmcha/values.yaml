config:
  environment: production
  enable_tls: true

secrets:
  osm_access_key:
  osm_secret_key:
  osmcha_db_password:

app:
  replicas: 2
  host: osmcha.org

  api:
    image:
      repository: ghcr.io/osmcha/osmcha-django
      tag: f267991c1d35929763bfb7a75dfd1e75afe01c69
    postgres_host: osmcha-database.cz9ktd5n6tn5.us-east-1.rds.amazonaws.com
    postgres_user: postgres
    postgres_database: osmcha
    redis_url: redis://redis-master:6379
    frontend_tag: v0.86.0-production # should we use this?

  # OSMCha frontend - runs as a sidecar to the API
  ui:
    replicas: 1
    nodeSelector: {}
    image:
      repository: ghcr.io/osmcha/osmcha-frontend
      tag: 4f05de886fa4efb91bee32859dbae3ea9363f0cf

    # Nginx config - templates/config-map.yaml
    nginxConfig:
      mime.types: |
        types {
            text/html                                        html htm shtml;
            text/css                                         css;
            text/xml                                         xml;
            image/gif                                        gif;
            image/jpeg                                       jpeg jpg;
            application/javascript                           js;
            image/png                                        png;
            image/svg+xml                                    svg svgz;
            image/tiff                                       tif tiff;
            image/x-icon                                     ico;
            image/x-jng                                      jng;
            application/font-woff                            woff;
            application/json                                 json;
            application/zip                                  zip;
        }
      nginx.conf: |
        worker_processes  4;

        events {
          worker_connections  1024;
        }

        http {
          include /etc/nginx/mime.types;
          default_type application/octet-stream;

          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
          '$status $body_bytes_sent "$http_referer" '
          '"$http_user_agent" "$http_x_forwarded_for"';

          access_log  /var/log/nginx/access.log  main;

          sendfile        on;
          #tcp_nopush     on;

          keepalive_timeout  65;

          #gzip  on;

          upstream app {
            server localhost:5000;
          }

          server {
            listen 80;
            charset     utf-8;

            location ~ ^/static.* {
              root /staticfiles;
              try_files $uri @proxy_to_frontend;
            }

            location @proxy_to_frontend {
              root /assets;
              try_files $uri $uri/ =404;
            }

            location /api {
              try_files $uri $uri/ @django;
            }

            location /admin {
              try_files $uri $uri/ @django;
            }

            location @django {
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $http_host;
              proxy_redirect off;
              proxy_pass   http://app;
              fastcgi_connect_timeout 130;
              fastcgi_send_timeout 130;
              fastcgi_read_timeout 130;
            }

            location / {
              root /assets;
              # checks for static file, if not found proxy to app
              try_files $uri $uri/ /index.html;
            }
          }
        }
