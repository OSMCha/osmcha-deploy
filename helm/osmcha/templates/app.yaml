apiVersion: v1
kind: ConfigMap
metadata:
  name: osmcha-frontend-nginx-config
data:
  {{- toYaml .Values.app.ui.nginxConfig | nindent 2 }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: osmcha-app
  labels:
    app: osmcha
    environment: {{ .Values.config.environment }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: osmcha-app
  template:
    metadata:
      labels:
        app: osmcha-app
      annotations:
        nginx-configmap-hash: {{ .Values.app.ui.nginxConfig | toJson | sha256sum | trunc 8 }}
    spec:
      initContainers:
      - name: osmcha-init
        image: {{ .Values.app.api.image.repository }}:{{ .Values.app.api.image.tag }}
        command:
        - /bin/sh
        - -c
        - |
          python manage.py collectstatic --noinput
          mkdir -p /staticfiles/static
          cp -r /app/staticfiles/* /staticfiles/static/
        env:
        - name: POSTGRES_HOST
          value: {{ .Values.app.api.postgres_host}}
        - name: PGHOST
          value: {{ .Values.app.api.postgres_host}}
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: {{ .Values.app.api.postgres_user}}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: osmcha-db-credentials
              key: password
        - name: POSTGRES_DATABASE
          value: {{ .Values.app.api.postgres_database}}
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret-key
              key: django_secret_key
        - name: DJANGO_SETTINGS_MODULE
          value: "config.settings.production"
        - name: OSMCHA_FRONTEND_VERSION
          value: {{ .Values.app.api.frontend_tag }}
        - name: REDIS_URL
          value: {{ .Values.app.api.redis_url }}
        volumeMounts:
        - name: staticfiles
          mountPath: /staticfiles
      containers:
      - name: osmcha-api
        image: {{ .Values.app.api.image.repository }}:{{ .Values.app.api.image.tag }}
        command:
        - gunicorn
        - "--timeout"
        - "30"
        - "--keep-alive"
        - "2"
        - "--workers"
        - "4"
        - "--bind"
        - 0.0.0.0:5000
        - --log-file
        - "-"
        - --access-logfile
        - "-"
        - config.wsgi
        env:
        - name: POSTGRES_HOST
          value: {{ .Values.app.api.postgres_host}}
        - name: PGHOST
          value: {{ .Values.app.api.postgres_host}}
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: {{ .Values.app.api.postgres_user}}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: osmcha-db-credentials
              key: password
        - name: POSTGRES_DATABASE
          value: {{ .Values.app.api.postgres_database}}
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret-key
              key: django_secret_key
        - name: DJANGO_SETTINGS_MODULE
          value: "config.settings.production"
        - name: OSMCHA_FRONTEND_VERSION
          value: {{ .Values.app.api.frontend_tag }}
        - name: OAUTH_OSM_KEY
          valueFrom:
            secretKeyRef:
              name: osm-app-credentials
              key: access_key
        - name: OAUTH_OSM_SECRET
          valueFrom:
            secretKeyRef:
              name: osm-app-credentials
              key: secret_key
        - name: OAUTH_REDIRECT_URI
          value: "https://{{ .Values.app.host }}/oauth-landing.html"
        - name: REDIS_URL
          value: {{ .Values.app.api.redis_url }}
        - name: DJANGO_SECURE_SSL_REDIRECT
          value: "False"
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: staticfiles
          mountPath: /staticfiles
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          # initialDelaySeconds: 60
          timeoutSeconds: 60
      - name: frontend-nginx
        image: "{{ .Values.app.ui.image.repository }}:{{ .Values.app.ui.image.tag }}"
        ports:
        - containerPort: 80
        volumeMounts:
          - name: osmcha-frontend-nginx-config
            mountPath: /etc/nginx
            readOnly: true
          - name: staticfiles
            mountPath: /staticfiles
      volumes:
      - name: staticfiles
        emptyDir: {}
      - name: osmcha-frontend-nginx-config
        configMap:
          name: osmcha-frontend-nginx-config
          defaultMode: 0777
      {{- if .Values.app.nodeSelector }}  
      nodeSelector:
        {{- toYaml .Values.app.nodeSelector | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: osmcha-app
spec:
  selector:
    app: osmcha-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
