apiVersion: batch/v1
kind: CronJob
metadata:
  name: osmcha-fetch-changesets-cronjob
  labels:
    app: osmcha
    environment: {{ .Values.config.environment }}
    release: {{ .Release.Name }}
spec:
  schedule: "*/2 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: osmcha-fetch-changesets
            image: {{ .Values.app.api.image.repository }}:{{ .Values.app.api.image.tag }}
            imagePullPolicy: IfNotPresent
            # Sometimes the fetchchangesets command hangs, so we set a timeout of 10 minutes
            # to prevent the job from hanging idly.
            # The timeout command kills the process after 10 minutes and forces the job to restart
            # with the next scheduled run.
            command:
            - /bin/sh
            - -c
            - sleep 3600
            # - timeout 600s python manage.py fetchchangesets
            env:
            - name: POSTGRES_HOST
              value: {{ .Values.app.api.postgres_host}}
            - name: PGHOST
              value: {{ .Values.app.api.postgres_host}}
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: {{ .Values.app.api.postgres_user}}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: osmcha-db-credentials
                  key: password
            - name: POSTGRES_DATABASE
              value: {{ .Values.app.api.postgres_database}}
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django-secret-key
                  key: django_secret_key
            - name: DJANGO_SETTINGS_MODULE
              value: "config.settings.production"
            - name: REDIS_URL
              value: {{ .Values.app.api.redis_url }}
          restartPolicy: Never

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: osmcha-adiff-service-cronjob
  labels:
    app: osmcha
    environment: {{ .Values.config.environment }}
    release: {{ .Release.Name }}
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: osmcha-adiff-service-process-replication
            image: {{ .Values.adiff_service.image.repository }}:{{ .Values.adiff_service.image.tag }}
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - timeout 600s yarn update-queue
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: osmcha-real-changesets-credentials
                  key: access_key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: osmcha-real-changesets-credentials
                  key: secret_key
            - name: OsmchaAdminToken
              valueFrom:
                secretKeyRef:
                  name: osmcha-admin-token
                  key: osmcha_admin_token
            - name: RedisServer
              value: {{ .Values.adiff_service.redis_url }}
          restartPolicy: Never
